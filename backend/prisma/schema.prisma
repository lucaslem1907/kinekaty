// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String?
  isAdmin   Boolean  @default(false)
  bookings  Booking[]
  tokens    Token[]
  createdAt DateTime @default(now())
}

model Class {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  date        DateTime
  time        String
  duration    Int
  location    String
  capacity    Int
  bookings    Booking[]
  createdAt   DateTime @default(now())
}

model Booking {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  class     Class    @relation(fields: [classId], references: [id])
  classId   Int
  bookedAt  DateTime @default(now())

  @@unique([userId, classId]) // prevents double-booking by same user
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
}
